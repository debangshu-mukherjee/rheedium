name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
      
    - name: Install dependencies
      run: |
        uv sync --extra test --extra dev
        
    - name: Lint with black
      run: |
        uv run black --check --diff src/ tests/
        
    - name: Type check with beartype (runtime)
      run: |
        uv run python -c "import rheedium; print('Beartype validation passed')"
        
    - name: Run tests with coverage
      env:
        JAX_PLATFORMS: cpu
      run: |
        uv run pytest tests/ \
          --cov=src/rheedium \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-fail-under=70 \
          --junitxml=test-results.xml \
          -v
          
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          test-results.xml
          htmlcov/
          coverage.xml
          
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && matrix.os == 'ubuntu-latest'
      with:
        files: test-results.xml
        check_name: Test Results (Python ${{ matrix.python-version }})
        comment_mode: create new
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Set up Python
      run: uv python install 3.11
      
    - name: Install build dependencies
      run: uv sync --extra dev
      
    - name: Build package
      run: uv build
      
    - name: Check package metadata
      run: |
        uv run python -m twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/